name: Linux

on:
  [push, pull_request]

env:
  QT_VERSION: 5.15.2

jobs:
  linux_build_pymeshlab:
    name: Build PyMeshLab (Linux)
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        pyversion: [3.7, 3.8, 3.9, "3.10"]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache-${{ env.QT_VERSION }}
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: ${{ env.QT_VERSION }}
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Install Ubuntu dependencies
      run: |
        sudo apt-get update && sudo apt-get upgrade
        sudo apt-get install -y mesa-common-dev libglu1-mesa-dev libgmp-dev libcgal-dev libboost-all-dev
        #needed by qt 5.15 on linux
        sudo apt-get install libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-render-util0-dev libxcb-xinerama0-dev
    - name: Environment variables
      id: envs
      run: |
        cd src/meshlab
        echo  ::set-output name=meshlab_commit::$(git rev-parse --short HEAD)
    - name: Cache MeshLab Build
      id: cache-meshlab-build
      uses: actions/cache@v2
      with:
        path: |
          build/distrib/pymeshlab/lib/
        key: ${{ runner.os }}-meshlab_build-${{steps.envs.outputs.meshlab_commit}}
    - name: Set build MeshLab option
      id: meshlab-build-option
      if: steps.cache-meshlab-build.outputs.cache-hit == 'true'
      run: |
        echo  ::set-output name=meshlab-build-option::"--no-build-meshlab"
    - name: Build PyMeshLab ${{ matrix.pyversion }}
      run: |
        sh scripts/${{ runner.os }}/1_build.sh --nightly ${{steps.meshlab-build-option.outputs.meshlab-build-option}}
    - name: Deploy PyMeshLab ${{ matrix.pyversion }}
      run: |
        sh scripts/${{ runner.os }}/2_deploy.sh
    - name: Build Wheel
      shell: bash
      run: |
        VER=$(date +%Y.%m.%d)
        echo "${VER}.dev0" | tr -d '\n'> PYML_VERSION
        pip install wheel
        pip wheel . -w wheels/
    - name: Upload PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/upload-artifact@v2
      with:
        name: PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
        path: pymeshlab
    - name: Upload wheel ${{ runner.os }} python ${{ matrix.pyversion }}
      uses: actions/upload-artifact@v2
      with:
        name: pymeshlab_whl_${{ runner.os }}_python${{ matrix.pyversion }}
        path: wheels/pymeshlab*.whl

  linux_test:
    name: Test PyMeshLab (Linux)
    runs-on: ubuntu-latest
    needs: linux_build_pymeshlab
    strategy:
      matrix:
        pyversion: [3.7, 3.8, 3.9, "3.10"]
    steps:
    - name: Download PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/download-artifact@v2
      with:
        name: PyMeshLab_${{ runner.os }}_python${{ matrix.pyversion }}
        path: pymeshlab/
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Run Tests ${{ matrix.pyversion }}
      run: |
        pip3 install pytest numpy
        pytest --pyargs pymeshlab -m "not glcontext"
    #- name: Upload PyMeshLab results
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: PyMeshLabResults_${{ runner.os }}_python${{ matrix.pyversion }}
    #    path: pymeshlab/tests/sample_meshes/test_output

  linux_test_wheel:
    name: Test Wheel (Linux)
    needs: linux_build_pymeshlab
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pyversion: [3.7, 3.8, 3.9, "3.10"]
    steps:
    - name: Download pymeshlab_whl_${{ runner.os }}_python${{ matrix.pyversion }}
      uses: actions/download-artifact@v2
      with:
        name: pymeshlab_whl_${{ runner.os }}_python${{ matrix.pyversion }}
        path: .
    - name: Install Python ${{ matrix.pyversion }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.pyversion }}
    - name: Install and Test Wheel
      shell: bash
      run: |
        pip install pytest
        pip install pymeshlab*.whl
        pytest --pyargs pymeshlab -m "not glcontext"
